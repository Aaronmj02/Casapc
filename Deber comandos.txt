UNIVERSIDAD DE LAS FUERZAS ARMADAS "ESPE"

Nombre:Aaron Moncayo
NRC: 13930


Que es GIT y GITHUB?

Git es un software de control de versiones pensando en la compatibilidad del mantenimiento de versiones de aplicaciones 
cuando estas tienen un gran número de archivos de código fuente. Su propósito es llevar registro de los cambios en archivos de 
computadora incluyendo coordinar el trabajo que varias personas realizan sobre archivos compartidos en un repositorio de código.

Por otro lado GITHUB ss una plataforma que puede mantener repositorios de código en almacenamiento basado en la nube 
para que varios desarrolladores puedan trabajar en un solo proyecto y ver las ediciones de cada uno en tiempo real

Comandos:

Git clone:
Git clone es un comando para descargarte el código fuente existente desde un repositorio remoto.

Git branch:
Las ramas (branch) son altamente importantes en el mundo de Git. Usando ramas, varios desarrolladores 
pueden trabajar en paralelo en el mismo proyecto simultáneamente. Podemos usar el comando git branch para crearlas, listarlas y eliminarlas.

Git branch -d <nombre-de-la-rama>
Borrar una rama.

Git branch --list
Visualización de las ramas.

Git checkout:
Para cambiar de una rama a otra.

git checkout -b <nombre-de-tu-rama>
Este comando crea una nueva rama en local (-b viene de rama (branch)) y te cambia a la rama que acabas de crear.

Git status
El comando de git status nos da toda la información necesaria sobre la rama actual.

Git add:
Necesitamos usar el comando git add para incluir los cambios del o de los archivos en tu siguiente commit.

Añadir un único archivo:
git add <archivo>

Añadir todo de una vez:
git add -A

Git commit:
Git commit es como establecer un punto de control en el proceso de desarrollo al cual puedes volver más tarde si es necesario.
También necesitamos escribir un mensaje corto para explicar qué hemos desarrollado o modificado en el código fuente.

Git push:
Git push envía tus commits al repositorio remoto.

Git pull (git pull <nombre-remoto>)
El comando git pull se utiliza para recibir actualizaciones del repositorio remoto.

Git merge
Git merge básicamente integra las características de tu rama con todos los commits realizados a las ramas dev (o master). 

Por ejemplo, cuando quieres fusionar tu rama de características en la rama dev:
Primero, debes cambiarte a la rama dev:
git checkout dev

Antes de fusionar, debes actualizar tu rama dev local:
git fetch

Por último, puedes fusionar tu rama de características en la rama dev:
git merge <nombre-de-la-rama>


